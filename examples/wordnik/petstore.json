{
  "swagger": 2.0,
  "info": {
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
    "termsOfService": "http://helloreverb.com/terms/",
    "contact": "mailto://apiteam@wordnik.com",
    "license": "Creative Commons 4.0 International",
    "licenseUrl": "http://creativecommons.org/licenses/by/4.0/"
  },
  "host": "http://petstore.swagger.wordnik.com",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/pets": {
      "get": {
        "summary": "finds pets in the system",
        "description": "returns all pets from the system that the user has access to",
        "nickname": "findPets",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "parameters": [
          {
            "name": "tags",
            "kind": "query",
            "summary": "tags to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "format": "csv"
          },
          {
            "name": "limit",
            "kind": "query",
            "summary": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "type": "array",
            "items": {
              "$ref": "Pet"
            }
          },
          "default": {
            "description": "unexpected error",
            "$ref": "ErrorModel"
          }
        }
      },
      "post": {
        "summary": "Add a new pet to the store",
        "description": "Creates a new pet in the store.  Duplicates are allowed",
        "nickname": "addPet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pet",
            "kind": "body",
            "summary": "Pet to add to the store",
            "required": true,
            "$ref": "PetInput"
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "$ref": "Pet"
          },
          "default": {
            "description": "unexpected error",
            "$ref": "ErrorModel"
          }
        }
      }
    },
    "/pets/{id}": {
      "get": {
        "summary": "find a pet by id",
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "nickname": "findPetById",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "parameters": [
          {
            "name": "id",
            "kind": "path",
            "summary": "ID of pet to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "$ref": "Pet"
          },
          "default": {
            "description": "unexpected error",
            "$ref": "ErrorModel"
          }
        }
      },
      "delete": {
        "summary": "pet to delete",
        "description": "deletes a single pet based on the ID supplied",
        "nickname": "deletePet",
        "parameters": [
          {
            "name": "id",
            "kind": "path",
            "summary": "ID of pet to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "pet deleted"
          },
          "default": {
            "description": "unexpected error",
            "$ref": "ErrorModel"
          }
        }
      }
    }
  },
  "models": {
    "Pet": {
      "required": [
        "id", "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "PetInput": {
      "allOf": [
        {
          "$ref": "Pet"
        },
        {
          "required": [ "name" ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            }
          }
        }
      ]
    },
    "ErrorModel": {
      "required": [ "code", "message" ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
